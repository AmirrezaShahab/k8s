## Default values for prometheus-mysql-exporter.
## This is a YAML-formatted file.
## Declare variables to be passed into your templates.

## namespaceOverride overrides the namespace which the resources will be deployed in
namespaceOverride: ""

## override release name
fullnameOverride: ""

replicaCount: 1

image:
  registry: quay.io
  repository: prometheus/mysqld-exporter
  ## if not set charts appVersion var is used
  tag: ""
  pullPolicy: "IfNotPresent"

# imagePullSecrets:
# - name: secret-name
imagePullSecrets: []

service:
  labels: {}
  annotations: {}
  name: mysql-exporter
  type: ClusterIP
  externalPort: 9104
  internalPort: 9104

serviceMonitor:
  enabled: false
  additionalLabels: {}
  jobLabel: ""
  targetLabels: []
  podTargetLabels: []
  metricRelabelings: []
  relabelings: []
  multipleTarget:
    enabled: false
    targets: []
    sharedSecret:
      enabled: false
      name: ""

serviceAccount:
  create: false
  name: ""
  annotations: {}

resources: {}
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

podLabels: {}

priorityClassName: ""

extraVolumeMounts: []
# - name: example
#   mountPath: /example

extraVolumes: []
# - name: example
#   configMap:
#     name: example

podSecurityContext: {}
  # fsGroup: 65534

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 65534

annotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: "/metrics"
  prometheus.io/port: "9104"

config: {}
  # logLevel: info
  # logFormat: "logger:stderr"

collectors: {}
  # auto_increment.columns: false
  # binlog_size: false
  # engine_innodb_status: false
  # engine_tokudb_status: false
  # global_status: true
  # global_variables: true
  # info_schema.clientstats: false
  # info_schema.innodb_metrics: false
  # info_schema.innodb_tablespaces: false
  # info_schema.innodb_cmp: false
  # info_schema.innodb_cmpmem: false
  # info_schema.processlist: false
  # info_schema.processlist.min_time: 0
  # info_schema.query_response_time: false
  # info_schema.tables: true
  # info_schema.tables.databases: '*'
  # info_schema.tablestats: false
  # info_schema.schemastats: false
  # info_schema.userstats: false
  # perf_schema.eventsstatements: false
  # perf_schema.eventsstatements.digest_text_limit: 120
  # perf_schema.eventsstatements.limit: false
  # perf_schema.eventsstatements.timelimit: 86400
  # perf_schema.eventswaits: false
  # perf_schema.file_events: false
  # perf_schema.file_instances: false
  # perf_schema.indexiowaits: false
  # perf_schema.tableiowaits: false
  # perf_schema.tablelocks: false
  # perf_schema.replication_group_member_stats: false
  # slave_status: true
  # slave_hosts: false
  # heartbeat: false
  # heartbeat.database: heartbeat
  # heartbeat.table: heartbeat

mysql:
  db: "<Change me>"
  host: "<Change>"
  additionalConfig: []
  pass: "<Change>"
  port: 3306
  protocol: ""
  user: "<Change>"
  existingConfigSecret:
    name: ""
    key: ""
  existingPasswordSecret:
    name: ""
    key: ""

cloudsqlproxy:
  enabled: false
  image:
    repo: "gcr.io/cloud-sql-connectors/cloud-sql-proxy"
    tag: "2.4.0"
    pullPolicy: "IfNotPresent"
  instanceConnectionName: "project:us-central1:dbname"
  privateIp: false
  port: "3306"
  credentialsSecret: ""
  credentials: ""
  workloadIdentity:
    enabled: false
    serviceAccountEmail: ""
  extraArgs: ""

prometheusRule:
  enabled: false
  additionalLabels: {}
  namespace: ""
  rules: []